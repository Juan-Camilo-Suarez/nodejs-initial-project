"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.multipart = exports.Multipart = void 0;
var defaults_1 = require("./defaults");
var handler_1 = require("./handler");
var Multipart = (function () {
    function Multipart(globalOptions) {
        if (globalOptions === undefined) {
            this.globalOptions = __assign({}, defaults_1.defaultOptions);
            return;
        }
        this.globalOptions = __assign(__assign({}, defaults_1.defaultOptions), globalOptions);
    }
    Multipart.prototype.text = function (options) {
        return handler_1.handleRequest(0, __assign(__assign({}, this.globalOptions), options), undefined);
    };
    Multipart.prototype.file = function (fieldName, options) {
        return handler_1.handleRequest(1, __assign(__assign({}, this.globalOptions), options), fieldName);
    };
    Multipart.prototype.files = function (fieldName, maxFiles, options) {
        if (maxFiles === void 0) { maxFiles = 1; }
        return handler_1.handleRequest(maxFiles, __assign(__assign({}, this.globalOptions), options), fieldName);
    };
    return Multipart;
}());
exports.Multipart = Multipart;
var multipart = function (options) {
    if (options === undefined) {
        return new Multipart();
    }
    return new Multipart(options);
};
exports.multipart = multipart;
//# sourceMappingURL=multipart.js.map